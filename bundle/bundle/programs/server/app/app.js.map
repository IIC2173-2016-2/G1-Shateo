{"version":3,"sources":["meteor://ðŸ’»app/imports/api/checkins.js","meteor://ðŸ’»app/imports/api/messages.js","meteor://ðŸ’»app/imports/api/rooms.js","meteor://ðŸ’»app/imports/api/users.js","meteor://ðŸ’»app/mup.js","meteor://ðŸ’»app/server/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo'\nimport { Meteor } from 'meteor/meteor'\nimport { check } from 'meteor/check'\n\nexport const CheckIns = new Mongo.Collection('checkins')\n\nif (Meteor.isServer) {\n  Meteor.publish('userCheckIns', () => {\n    return CheckIns.find({ userId: this.userId, valid: true })\n  })\n}\n\nMeteor.methods({\n  'checkIns.addNew'(roomId) {\n    check(roomId, String)\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized')\n    }\n    var time = new Date()\n    CheckIns.insert({\n      time: new Date(),\n      expires: new Date(time.getTime() + 24 * 60 * 60 * 1000), //24 * 60 * 60 * 1000, // 1 Day\n      userId: this.userId,\n      roomId: roomId,\n      valid: true\n    })\n  }\n})\n","import { Mongo } from 'meteor/mongo'\nimport { Meteor } from 'meteor/meteor'\nimport { check } from 'meteor/check'\n\nexport const Messages = new Mongo.Collection('messages')\n\nif (Meteor.isServer) {\n  Meteor.publish('messages', () => {\n    return Messages.find()\n  })\n}\n\nMeteor.methods({\n  'messages.new'(roomId, msg) {\n    check(roomId, String)\n    check(msg, String)\n\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized')\n    }\n\n    Messages.insert({\n      roomId: roomId,\n      text: msg,\n      createdAt: new Date(),\n      userId: this.userId\n    })\n  }\n})\n","import { Mongo } from 'meteor/mongo'\nimport { Meteor } from 'meteor/meteor'\nimport { check } from 'meteor/check'\n\nexport const Rooms = new Mongo.Collection('rooms')\n\nif (Meteor.isServer) {\n  Meteor.publish('rooms', () => {\n    return Rooms.find()\n  })\n\n  Meteor.publish('nearRooms', (latlng) => {\n    return Rooms.find({ // ya esta ordenado por distancia\n      location: {\n        $near: {\n          $geometry: {\n            type: \"Point\",\n            coordinates: latlng\n          },\n          $maxDistance: 2000 // metros\n        }\n      }\n    })\n  })\n}\n\nNonEmptyString = Match.Where((x) => {\n  check(x, String)\n  return x.length > 0\n})\n\nMeteor.methods({\n  'rooms.new'(name) {\n    check(name, NonEmptyString)\n\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized')\n    }\n\n    var user = Meteor.users.findOne(this.userId)\n    if (!user.location || !user.location.coordinates) {\n      throw new Meteor.Error('not-user-position')\n    }\n\n    var roomId = Rooms.insert({\n      name: name,\n      createdAt: new Date(), // current time\n      users: [],\n      location: {\n          type: 'Point',\n          coordinates: [user.location.coordinates[0], user.location.coordinates[1]]\n       }\n    })\n    if(roomId) {\n      Meteor.call('rooms.addUser', roomId)\n      Meteor.call('checkIns.addNew', roomId)\n    }\n  },\n  'rooms.remove'(roomId) {\n    check(roomId, String)\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized')\n    }\n    Rooms.remove(roomId)\n  },\n  'rooms.updateName'(roomId, newName) {\n    check(roomId, String)\n    check(newName, NonEmptyString)\n\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized')\n    }\n    Rooms.update(roomId, {\n      $set: { name: newName },\n    })\n  },\n  'rooms.addUser'(roomId) {\n    check(roomId, String)\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized')\n    }\n    Rooms.update(roomId, {\n      $addToSet: { users: this.userId }\n    })\n    Meteor.users.update(this.userId, {\n      $addToSet: { rooms: roomId }\n    })\n  },\n  'rooms.removeUser'(roomId) {\n    check(roomId, String)\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized')\n    }\n    Rooms.update(roomId, {\n      $pull: { users: this.userId }\n    })\n    Meteor.users.update(this.userId, {\n      $pull: { rooms: roomId }\n    })\n  }\n})\n","import { Mongo } from 'meteor/mongo'\nimport { Meteor } from 'meteor/meteor'\nimport { check } from 'meteor/check'\n\nif (Meteor.isServer) {\n  Meteor.publish('userData', function () {\n    this.ready()\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized')\n    }\n    return Meteor.users.find(this.userId)\n  })\n  Meteor.publish('allUserData', function () {\n    return Meteor.users.find({}, {\n      fields: {\n        'status': 1,\n        'emails': 1,\n        'location': 1\n      }\n    })\n  })\n}\n\nMeteor.methods({\n  'users.update_location'(latitude, longitude) {\n    check(latitude, Number)\n    check(longitude, Number)\n\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized')\n    }\n\n    Meteor.users.update(this.userId,\n    {\n      $set: {\n        location: {\n            type: 'Point',\n            coordinates: [latitude, longitude]\n         },\n      }\n    })\n  }\n})\n","module.exports = {\n  servers: {\n    one: {\n      host: \"assw1.ing.puc.cl\",\n      username: \"administrator\",\n      password: \"geochat1\"\n    },\n    two: {\n      host: \"assw2.ing.puc.cl\",\n      username: \"administrator\",\n      password: \"Hn$9aZ-4b\"\n    },\n    three: {\n      host: \"assw3.ing.puc.cl\",\n      username: \"administrator\",\n      password: \"Hr$1udY-9m\"\n    },\n    four: {\n      host: \"assw4.ing.puc.cl\",\n      username: \"administrator\",\n      password: \"Hd$7wN-5k\"\n    }\n  },\n\n  meteor: {\n    name: 'geoChat',\n    path: './',\n    port: 80,\n    servers: {\n      two: {}\n    },\n    buildOptions: {\n      serverOnly: true,\n      debug: true\n    },\n    env: {\n      ROOT_URL: 'assw2.ing.puc.cl',\n      MONGO_URL: 'mongodb://localhost/meteor'\n    },\n    deployCheckWaitTime: 60\n  },\n\n  ssl: {\n    port: 443,\n    crt: './ssl/fullchain.pem',\n    key: './ssl/privkey.pem',\n  },\n\n  mongo: {\n    oplog: true,\n    port: 27017,\n    servers: {\n      two: {}\n    },\n  },\n};","import { Meteor } from 'meteor/meteor'\nimport { Accounts } from 'meteor/accounts-base'\nimport { Messages } from '../imports/api/messages.js'\nimport { Rooms } from '../imports/api/rooms.js'\nimport { CheckIns } from '../imports/api/checkins.js'\nimport '../imports/api/users.js'\n\nAccounts.onCreateUser(function(options, user) {\n  if (options.location) {\n    user.location = options.location\n  }\n  if (options.name) {\n    user.name = options.name\n  }\n  if (options.birth_date) {\n    user.birth_date = options.birth_date\n  }\n  if (options.address) {\n    user.address = options.address\n  }\n  if (options.blood_type) {\n    user.blood_type = options.blood_type\n  }\n  if (options.credit_card) {\n    user.credit_card = options.credit_card\n  }\n  user.rooms = []\n  user.arquicoins = 0\n  return user\n})\n\nMeteor.startup(() => {\n  // code to run on server at startup\n  Rooms._ensureIndex({ location : '2dsphere' })\n\n  Meteor.setInterval(() => {\n    CheckIns.find({\n        valid: true,\n        expires: { $lte: new Date(new Date().getTime() + 24 * 60 * 60 * 1000) }\n      }).forEach((checkIn) => {\n      Rooms.update(checkIn.roomId, {\n        $pull: { users: checkIn.userId }\n      })\n      Meteor.users.update(checkIn.userId, {\n        $pull: { rooms: checkIn.roomId }\n      })\n      CheckIns.update(checkIn._id, {\n        $set: { valid: false }\n      })\n    })\n  }, 1)\n})\n"]}